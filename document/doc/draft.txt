影视剧增加影评记录

项目（单体系统）：
	需求=>原型=>开发=>测试=>运维=>运


系统保留字符 / > ，保留字符在系统级别的操作中不能使用，用户输入的信息不受此限制。

有些表中的默认的数据项写入：如我的收藏夹、视频库、音频库......

记录表：
	将源数据以json的方式存储进入，任务调度的id是记录的id

所有的信息保存hash值，此值是系统数据的唯一标识
对于相似度对比的信息，给前端用户提示，基于用户选择处理（title，hash，ctime）

navigation 基于菜单、action动态生成，用/做分隔符

部署docker（k8s、dns、es、fastFDFS）

资源库|设置


文档详情页是目录树的形式展示该文件所包含的所有的文件树形结构
title、docType、docDate、FileType、filesize、Category、isbn、hash、author、原创标识
无法显式的属性值就用 - 代替

分类：
	书籍，视频，文章
	
书籍：自制（打上原创表）、附件添加
文章：参考文献，空缺预留补漏位

文档：
     资源（附件，仅文件，或者纯文字）、纯文本、书籍、笔记、收藏夹、便签、todolist、音乐库、电影；当docType调整后，需要迁移数据到对应的栏目中
     
     文档标题、分类、标签归档到一个表中，扩展信息根据不同的类型划分到不同的扩展表中
     
     子的菜单只是将文档中的对应的栏目提出来更方便管理
     
     对于文件的操作一定要考虑是否被其他文档引用的问题，及文档内部的错综纷杂的关系，是决定当前的文档是否可以被删除

文章列表
     图片格式、纯文本格式
     
笔记
     capture的图片是以ppt还是什么方式连续展示呢？
	 支持 html、markdown两种模式切换：后台保存的时候基于前端编辑器的字段名或者其他标识，content前加上editor_type，这样查看渲染和编辑的时候即可映射到对应的编辑器
	 
	 
权限：
	文档权限
		结合 linux umask、RBAC
		文档的默认权限 666-umask022=建立后的文档最大权限 
		公共权限的设置
		逻辑与的运用 0666 & 0022
		超级管理员受此权限控制
		每个登录用户可以设置自己的掩码值（系统给出默认的掩码值）
		rwrw = go  当对某个不归属于任何组或者权限组之外的用户赋予权限的时候用o组的权限设置
		此权限只是定位到action级别
		
		添加文档的时候有授权操作（支持批量，公开+指定+私有[公开、指定未选择]）
		
	做到文字显示层级
		比如：当录入文档弹窗的选项减少后，那么用户直接通过链接访问则会会报链接不可用的提示
		（此是否应该归属到controller与urlmap的映射中？）
		列表展示的时候，某条记录不可以展示出，

收藏夹
	解析chrome，firefox，360，ie的favorite文件
	基于？前的domain/path校验
	
ElasticSearch：
	先做数据库里的信息同步到es中
	后期考虑识别pdf、img等文件的内容图文，写入es中
fastFDFS
	后期可以将文件调整存入到fastFDFS中，
	所以做系统的时候预留替换功能（fdfs://代表走FDFS系统， local://代表走本地服务器 ）
	访问的url需在逻辑代码中做替换

编辑操作加锁，获取编辑的version，支持对比后合并提交(git理念)
	
